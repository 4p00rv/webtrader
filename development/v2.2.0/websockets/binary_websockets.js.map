{"version":3,"sources":["../../../../src/websockets/binary_websockets.es6"],"names":["is_authenitcated_session","socket","get_app_id","app_ids","JSON","parse","config","local_storage","get","token","app_id","href","window","location","web_address","lastIndexOf","connect","i18n_name","value","api_url","websocket_url","ws","WebSocket","addEventListener","onopen","onclose","onmessage","event","growl","error","message","i18n","timeoutIsSet","require","tracker","trade_dialogs","get_trade_dialogs","unique_dialogs","get_unique_dialogs","fire_event","setTimeout","api","cached","authorize","then","reopen_trade_dialogs","reopen_unique_dialogs","callbacks","buffered_execs","buffered_sends","unresolved_promises","cached_promises","is_connected","readyState","length","data","shift","req_id","send","stringify","key","promise","sent_before","reject","msg_type","i","cb","echo_req","resolve","needs_authentication","prop","balance","statement","profit_table","portfolio","proposal_open_contract","buy","sell","get_self_exclusion","set_self_exclusion","req_id_counter","send_request","Promise","push","authenticate","auth_successfull","val","set","is_jpy_account","landing_company_name","indexOf","ok","remove","catch","up","code","invalidate","logout","err","close","send_authenticated_request","send_it","bind","oauth","name","args","fns","forEach","apply","undefined","timeout_promise","milliseconds","sell_expired_timeouts","proposal_op_store","proposal_open_contract_forget","events","on","off","index","splice","on_till","once_cb","done","subscribe","contract_id","subscribers","stream_id","id","forget","proposal","forgetter","ex","execute","switch_account","inx","map","acc","account","unshift","forget_all","console","timeout","is_authenticated","sell_expired","epoch","now","Date","getTime","transaction"],"mappings":"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","file":"binary_websockets.js","sourcesContent":["/**\n * Created by arnab on 2/24/15.\n */\n\nimport $ from 'jquery';\nimport app_ids_json from 'text!../oauth/app_id.json';\nimport 'common/util';\n\nlet is_authenitcated_session = false; /* wether or not the current websocket session is authenticated */\nlet socket = null;\n\nconst get_app_id = () => {\n   const app_ids = JSON.parse(app_ids_json);\n   const config = local_storage.get('config');\n   let token = (config && config.app_id) || '';\n\n   if(!token) { /* find the appropriate token */\n      const href = window.location.href;\n      for(const web_address in app_ids) {\n         if(href.lastIndexOf(web_address, 0) == 0) {\n            token = app_ids[web_address];\n            break;\n         }\n      }\n   }\n   return token;\n};\n\nexport const app_id = get_app_id();\n\nconst connect = () => {\n   const config = local_storage.get('config');\n   const i18n_name = (local_storage.get('i18n') || { value: 'en' }).value;\n   const api_url = ((config && config.websocket_url)  || 'wss://ws.binaryws.com/websockets/v3?l='+i18n_name) + '&app_id=' + app_id;\n   const ws = new WebSocket(api_url);\n\n   ws.addEventListener('open', onopen);\n   ws.addEventListener('close', onclose);\n   ws.addEventListener('message', onmessage);\n\n   ws.addEventListener('error',(event) => {\n      $.growl.error({message: 'Connection error.'.i18n()});\n      onclose(); // try to reconnect\n   });\n\n   return ws;\n}\n\nlet timeoutIsSet = false;\nconst onclose = () => {\n   require(['windows/tracker'], (tracker) => {\n      const trade_dialogs = tracker.get_trade_dialogs();\n      const unique_dialogs = tracker.get_unique_dialogs();\n      is_authenitcated_session = false;\n      fire_event('logout');\n      /**\n       *  The connection is closed, resubscrible to tick streaming.\n       *  We have to make sure that resubscribe is atleast 1 second delayed\n       **/\n        if (timeoutIsSet) { return; }\n        timeoutIsSet = true;\n        setTimeout(() => {\n            timeoutIsSet = false;\n            socket = connect();\n            if(local_storage.get('oauth')) {\n              api.cached.authorize().then(\n                 () => {\n                       tracker.reopen_trade_dialogs(trade_dialogs);\n                       setTimeout( () => tracker.reopen_unique_dialogs(unique_dialogs), 0);\n                 }\n              );\n            }\n        }, 1000);\n   });\n}\n\nconst callbacks = {};\nconst buffered_execs = [];\nconst buffered_sends = [];\nconst unresolved_promises = { /* req_id: { resolve: resolve, reject: reject, data: data } */};\nconst cached_promises = { /* key: {data: data, promise: promise } */}; /* requests that have been cached */\nconst is_connected = () => (socket && socket.readyState === 1);\n\n\nconst onopen = () => {\n   /* send buffered sends */\n   while (buffered_sends.length > 0) {\n      const data = buffered_sends.shift();\n      if(!unresolved_promises[data.req_id]) {\n         socket.send(JSON.stringify(data));\n      }\n   }\n   /* if the connection got closed while the result of an unresolved request\n           is not back yet, issue the same request again */\n   for(const key in unresolved_promises) {\n      const promise = unresolved_promises[key];\n      if(!promise) continue;\n      if(promise.sent_before) { /* reject if sent once before */\n         promise.reject({message: 'Connection closed.'.i18n()});\n      } else { /* send */\n         promise.sent_before = true;\n         socket.send(JSON.stringify(promise.data));\n      }\n   }\n   while (buffered_execs.length > 0)\n      buffered_execs.shift()();\n}\n\n/* execute buffered executes */\nconst onmessage = (message) => {\n   const data = JSON.parse(message.data);\n\n   /* do not block the main thread */\n   /* note: this will prevent subscribers from altering callbacks[data.msg_type] array\n           while we are iterating on it. this is especially important for tick trades */\n   callbacks[data.msg_type] = callbacks[data.msg_type] || [];\n   for(let i = 0; i < callbacks[data.msg_type].length; i++){\n      const cb = callbacks[data.msg_type][i];\n      setTimeout(\n         () => cb(data)\n         , 0);\n   }\n\n   const key = data.req_id;\n   const promise = unresolved_promises[key];\n   if (promise) {\n      delete unresolved_promises[key];\n      if (data.error) {\n         data.error.echo_req = data.echo_req;\n         data.error.req_id = data.req_id;\n         promise.reject(data.error);\n      }\n      else\n         promise.resolve(data);\n   }\n}\n\nsocket = connect(); // connect\n\n/* whether the given request needs authentication or not */\nconst needs_authentication = (data) => {\n   for (const prop in\n      { balance: 1, statement: 1,\n         profit_table: 1, portfolio: 1,\n         proposal_open_contract: 1, buy: 1, sell: 1,\n         get_self_exclusion : 1, set_self_exclusion : 1 })\n      if (prop in data)\n      return true;\n   return false;\n};\n\n/* send a raw request and return a promise */\nlet req_id_counter = 0;\nconst send_request = (data) => {\n   data.req_id = ++req_id_counter;\n\n   return new Promise((resolve,reject) => {\n      unresolved_promises[data.req_id] = { resolve: resolve, reject: reject, data: data };\n      if (is_connected()) {\n         socket.send(JSON.stringify(data));\n      } else\n         buffered_sends.push(data);\n   });\n};\n\n/* authenticate and return a promise */\nconst authenticate = (token) => {\n   let auth_successfull = false;\n   const data = { authorize: token },\n      key = JSON.stringify(data),\n      promise = send_request(data);\n\n   return promise\n      .then((val) => {\n         is_authenitcated_session = true;\n         local_storage.set('authorize', val.authorize); /* we can use the 'email' field retruned later */\n         const is_jpy_account = val.authorize.landing_company_name.indexOf('japan') !== -1;\n         if(!is_jpy_account) {\n            fire_event('login', val);\n         }\n         if(local_storage.get('oauth-login')) {\n            const ok = local_storage.get('oauth-login').value;\n            local_storage.remove('oauth-login');\n            if(ok && !is_jpy_account) {\n               fire_event('oauth-login', val);\n            }\n         }\n         auth_successfull = true;\n         cached_promises[key] = { data: data, promise: promise }; /* cache successfull authentication */\n\n         return val; /* pass the result */\n      })\n      .catch((up) => {\n         if (up.code!==\"SelfExclusion\" && !auth_successfull) {    /* authentication request is failed, clear local_storage */\n            is_authenitcated_session = false;\n            fire_event('logout');\n            local_storage.remove('oauth');\n         }\n         delete cached_promises[key];\n         throw up; /* pass the exception to next catch */\n      });\n};\n\n/* un-athenticate current session */\nexport const invalidate = () => {\n   local_storage.remove('oauth');\n   local_storage.remove('authorize');\n   fire_event(\"reset_realitycheck\");\n\n   api.send({logout: 1}) /* try to logout and if it fails close the socket */\n      .catch((err) =>{\n         $.growl.error({ message: err.message });\n         socket.close();\n      });\n   /* remove authenticated cached requests as well as authorize requests */\n   for(const i in cached_promises)\n      if(needs_authentication(cached_promises[i].data) || ('authorize' in cached_promises[i].data))\n         delete cached_promises[i];\n}\n\n/* first authenticate and then send the request */\nconst send_authenticated_request = (data) => {\n   if (is_authenitcated_session)\n      return send_request(data);\n\n   const send_it = send_request.bind(null,data);\n\n   if(local_storage.get('oauth')) {\n      const oauth = local_storage.get('oauth');\n      let token = oauth[0].token;\n      return authenticate(token)\n         .then(send_it);\n   }\n   else\n      return Promise.reject({ message: 'Please log in'.i18n()});\n};\n\n/* fire a custom event and call registered callbacks(api.events.on(name)) */\nconst fire_event =(name , ...args) =>{\n   const fns = callbacks[name] || [];\n   fns.forEach((cb) => {\n      setTimeout(\n         () => cb.apply(undefined, args)\n         ,0);\n   });\n}\n\n/* the current websocket api (v3) does not return a result for closed markets,\n       use this a a temporary workaround to timeout 'ticks_history' api call while laoding charts,\n       TODO: wait for backend to fix this! */\nconst timeout_promise =(key, milliseconds) => {\n   setTimeout(() => {\n      const promise = unresolved_promises[key];\n      if (promise) {\n         delete unresolved_promises[key];\n         promise.reject({message: 'Timeout for websocket request'.i18n()});\n      }\n   },milliseconds);\n};\n\nconst sell_expired_timeouts = {};\nconst proposal_op_store =  {/* contract_id: { subscribers: n, promise: promise, stream_id: '' } */};\nconst proposal_open_contract_forget =  {/* contract_id:  promise */};\n\nexport const events = {\n   on: (name, cb) => {\n      (callbacks[name] = callbacks[name] || []).push(cb);\n      return cb;\n   },\n   off: (name, cb) =>{\n      if(callbacks[name]) {\n         const index = callbacks[name].indexOf(cb);\n         index !== -1 && callbacks[name].splice(index, 1);\n      }\n   },\n   /* callback function should return true to unsubscribe */\n   on_till:(name, cb) =>{\n      const once_cb = (...args) => {\n         const done = cb(...args);\n         if(done)\n            api.events.off(name,once_cb);\n      }\n      api.events.on(name, once_cb);\n   }\n}\n\nexport const proposal_open_contract = {\n   subscribe: (contract_id) => {\n      /* already subscribed */\n      if(proposal_op_store[contract_id] && proposal_op_store[contract_id].subscribers > 0) {\n         proposal_op_store[contract_id].subscribers++;\n         return proposal_op_store[contract_id].promise;\n      }\n      /* subscribe and keep the promise */\n      const promise = api.send({proposal_open_contract: 1, contract_id: contract_id, subscribe: 1})\n         .then((data) => {\n            /* keep stream_id to easily forget */\n            proposal_op_store[contract_id].stream_id = data.proposal_open_contract.id;\n            return data;\n         })\n         .catch((up) => {\n            proposal_op_store[contract_id] = undefined;\n            throw up;\n         });\n      proposal_op_store[contract_id] = { subscribers: 1, promise: promise };\n      return promise;\n   },\n   forget: (contract_id) => {\n      const proposal = proposal_op_store[contract_id];\n      const forget = proposal_open_contract_forget[contract_id];\n      if(!proposal) {\n         return forget || Promise.resolve(); /* contract is being forgetted or does not exit */\n      }\n      if(proposal.subscribers == 0) {\n         return forget; /* contract is being forgetted */\n      }\n      proposal.subscribers--;\n      if(proposal.subscribers > 0) { /* there are still subscribers to this contract_id */\n         return Promise.resolve();\n      }\n      const forgetter = () => {\n         proposal_op_store[contract_id] = undefined;\n         return api.send({forget: proposal.stream_id})\n            .catch((up) => {\n               proposal_open_contract_forget[contract_id] = undefined;\n               throw up;\n            })\n            .then((data) => {\n               proposal_open_contract_forget[contract_id] = undefined;\n               return data;\n            })\n      };\n      if(proposal.stream_id) {\n         proposal_open_contract_forget[contract_id] = forgetter();\n      } else {\n         proposal_open_contract_forget[contract_id] = proposal.promise\n            .catch((ex) => { return; })\n            .then((data) => {\n               if(proposal.stream_id) /* proposal request had not exceptions */\n                  return forgetter();\n               else return; /* no stream, no need to forget */\n            });\n      }\n      return proposal_open_contract_forget[contract_id];\n   }\n}\n\n/* execute callback when the connection is ready */\nexport const execute = (cb) => {\n   if (is_connected())\n      setTimeout(cb, 0);// always run the callback async\n   else\n      buffered_execs.push(cb);\n}\n\n/* switch account */\nexport const switch_account = (id) => {\n   const oauth = local_storage.get('oauth');\n   if(!oauth) {\n      return Promise.reject({ message: 'Account token not found.'.i18n() });\n   }\n\n   const inx = oauth.map((acc) => acc.id).indexOf(id);\n   if(inx === -1) {\n      return promise.reject({ message: 'Account id not found.'.i18n() });\n   }\n\n   /* move the new account to the front of oauth array */\n   const account = oauth[inx];\n   oauth.splice(inx,1);\n   oauth.unshift(account);\n   local_storage.set('oauth', oauth);\n\n   /* remove authenticated cached requests as well as authorize requests */\n   for(const i in cached_promises)\n      if(needs_authentication(cached_promises[i].data) || ('authorize' in cached_promises[i].data))\n         delete cached_promises[i];\n   /* back removes all tokens on {logout: 1} request, so we simply reauthenticate\n             with the new token without logging out first! ot switch accounts */\n   is_authenitcated_session = false;\n\n   /* backend doesn't respect registered authenticated streams :/ */\n   api.send({forget_all: 'transaction'})\n      .catch((err) => console.error(err));\n\n   api.send({forget_all: 'balance'})\n      .catch((err) => console.error(err));\n\n   return api.cached.authorize().then(\n      () => fire_event(\"switch_account\")\n   );\n}\n\n/* if you want a request to be cached, that is when multiple modules request\n*  the same data or a module request a data multiple times, instead of calling\n*  liveapi.send can liveapi.cached.send.\n*  node: this will only cache if the result was successfull */\nexport const cached  = {\n   send:(data) => {\n      const key = JSON.stringify(data);\n      /* if there is a cached promise for this key (let say P), return P.\n       * assume P is in pending state, when P is fullfiled all attached .then() calls will run.\n       * assume P is in rejected state (or in fullfiled state), the changed .then() calls will be immediately rejected(or fullfiled).  */\n                if (cached_promises[key])\n                    return cached_promises[key].promise;\n      /* We don't want to cache promises that are rejected,\n                   Clear the cache in case of promise rejection */\n      cached_promises[key] = { data: data, promise: null };\n      return cached_promises[key].promise = api.send(data)\n         .then(\n            (val) => val, /* on resolve: do nothing */\n            (up) => {\n               delete cached_promises[key]; throw up;\n            } /* on reject: clear cache */\n         );\n   },\n   /* return the promise from last successfull authentication request,\n               if the session is not already authorized will send an authentication request */\n   authorize: () => {\n      const oauth = local_storage.get('oauth');\n      const token = oauth && oauth[0] && oauth[0].token,\n         key = JSON.stringify({ authorize: token });\n\n      if (is_authenitcated_session && token && cached_promises[key])\n         return cached_promises[key].promise;\n\n      return token ? authenticate(token) : /* we have a token => autheticate */\n         Promise.reject('Please log in.'.i18n());\n   }\n}\n\n\n/* sends a request and returns an es6-promise */\nexport const send = (data, timeout) => {\n   if (data && needs_authentication(data))\n      return send_authenticated_request(data);\n\n   const promise = send_request(data);\n   if(timeout) timeout_promise(data.req_id, timeout); //NOTE: \"timeout\" is a temporary fix for backend, try not to use it.\n   return promise;\n}\n\n/* whether current session is authenticated or not */\nexport const is_authenticated = () => is_authenitcated_session;\n\n\nexport const sell_expired = (epoch) => {\n   const now = (new Date().getTime())/1000 | 0;\n   epoch = epoch || now+1; // if epoch is undefined will try to sell expired contract 3 seconds later.\n   if(!sell_expired_timeouts[epoch] && epoch*1 > now) {\n      sell_expired_timeouts[epoch] = setTimeout(() => {\n         sell_expired_timeouts[epoch] = undefined;\n         api.send({sell_expired:1}).catch((err) => console.error(err));\n      }, (epoch+2 - now)*1000);\n   }\n}\n\nconst api = {\n   events,\n   proposal_open_contract,\n   execute,\n   switch_account,\n   cached,\n   send,\n   is_authenticated,\n   sell_expired,\n   invalidate,\n   app_id\n}\n\n/* always register for transaction & balance streams */\napi.events.on('login',() => {\n   api.send({transaction: 1, subscribe:1})\n      .catch((err) => console.error(err));\n\n   api.send({balance: 1, subscribe:1})\n      .catch((err) => console.error(err));\n});\n/* always forget transaction & balance streams on logout */\napi.events.on('logout',() => {\n   api.send({forget_all: 'transaction'})\n      .catch((err) => console.error(err));\n\n   api.send({forget_all: 'balance'})\n      .catch((err) => console.error(err));\n});\n\n export default api;\n"]}