{"version":3,"sources":["../../../../../../src/charts/indicators/indicatorBuilder/indicatorBuilder.es6"],"names":["define","$","rv","ind_json","_","html","windows","IndicatorWindow","containerIDWithHash","ind_shrt","before_add_cb","curr_ind","JSON","parse","init","ind","before_add_callback","cls_obj","root","i18n","dialog","createBlankWindow","title","long_display_name","resizable","collapsable","minimizable","maximizable","autoOpen","dialogClass","buttons","text","click","options","state","levels","each","index","data","level","color","stroke","dashStyle","width","strokeWidth","value","label","console","log","is_valid","checks","length","reduce","a","b","highcharts","series","addIndicator","short_display_name","toLowerCase","close","unbind","init_state","view","bind","indicator","dialogId","id","add","event","scope","require","lvl","open","push","delete","find","growl","error","message","lvl_cpy","slice","ele","splice","binders","ddslick","priority","publishes","el","publish","imagePosition","background","onSelected","selectedData","routine","row","remove","append","toggleClass","check","inRange","option_name","min","max","name","formatters","parseInt","copy_option","read","field","default"],"mappings":"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","file":"indicatorBuilder.js","sourcesContent":["define([\"jquery\", 'common/rivetsExtra', 'text!charts/indicators/indicators.json',\n \t\"lodash\", 'text!charts/indicators/indicatorBuilder/indicatorBuilder.html', \"windows/windows\", 'ddslick', \n\t\"jquery-growl\", 'css!charts/indicators/indicatorBuilder/indicatorBuilder.css'], function( $, rv, ind_json, _, html, windows ) {\n\n\t\tclass IndicatorWindow {\n\t\t\tconstructor(containerIDWithHash, ind_shrt, before_add_cb){\n\t\t\t\tconst curr_ind = JSON.parse(ind_json)[ind_shrt];\n\t\t\t\tthis.init(containerIDWithHash, curr_ind, before_add_cb);\n\t\t\t}\n\n\t\t\tinit(containerIDWithHash, ind, before_add_callback){\n\t\t\t\tconst cls_obj = this;\n\t\t\t\tconst root = $(html).i18n();\n\t\t\t\tconst dialog = windows.createBlankWindow(root, {\n          title: ind.long_display_name,\n          resizable: false,\n          collapsable: false,\n          minimizable: false,\n          maximizable: false,\n          autoOpen: true,\n          dialogClass:'ind-ui-dialog',\n          buttons: [\n            {\n              text: \"OK\",\n              click: function() {\n                  const options = cls_obj.state.options;\n                  options.levels && $.each(options.levels, function(index, data){\n                  \tvar level = {\t\n                  \t\tcolor: data.stroke,\n                        dashStyle: data.dashStyle,\n\t                    width: data.strokeWidth,\n\t                    value: data.level,\n\t                    label: {\n\t                        text: data.level\n\t                    }\n\t                };\n                  \toptions.levels[index] = level;\n                  });\n                  console.log(options);\n                  const is_valid = ()=>{\n                  \tconst checks = cls_obj.state.checks;\n\n                  \tif(checks.length == 0)\n                  \t\treturn true;\n\n                  \treturn checks.length === 1 ? checks[0]() : checks.reduce((a,b)=>{\n                  \t\ta = typeof a == \"function\"? a() : a;\n                  \t\tb = b();\n                  \t\treturn a && b;\n                  \t});\n                  }\n                  \n                  if(!is_valid()) return;\n                  \n                  before_add_callback && before_add_callback();\n                  \n                  \n                  //Add ATR for the main series\n                  $(containerIDWithHash).highcharts().series[0].addIndicator(ind.short_display_name.toLowerCase(), options);\n\n                  $(this).dialog(\"close\");\n              }\n            },\n            {\n              text: \"Cancel\",\n              click: function() {\n                  $(this).dialog(\"close\");\n              }\n            }\n          ],\n          close: function() {\n            cls_obj.unbind();\n          }\n        });\n        this.state = this.init_state(dialog, ind, containerIDWithHash); \n        this.view = rv.bind(root[0], this.state);\n\t\t\t}\n\t\t\n\t\t\tinit_state(root, indicator, containerIDWithHash){\n\t\t\t\tconst state = indicator;\n\n\t\t\t\tstate.options = {};\n\t\t\t\tstate.dialogId = \"#\"+root[0].id;\n\t\t\t\tstate.checks = [];\n\t\t\t\t/*indicator.fields.forEach((field) => {\n\t\t\t\t\tcreatElement[field.type] && creatElement.row(field.name, creatElement[field.type](field));\n\t\t\t\t});*/\n\t\t\t\tstate.levels = {\n\t\t\t\t\tadd: (event,scope) => {\n\t\t\t\t\t\trequire([\"indicator_levels\"], (lvl) => {\n\t\t\t\t\t\t\tlvl.open(containerIDWithHash,(levels) => {\n\t\t\t\t\t\t\t\tscope.options.levels.push(levels[0]);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tdelete: (event, scope) => {\n\t\t\t\t\t\tconst levels = $.find(\".levels_selected\");\n\t\t\t\t\t\tif(levels.length == 0){\n\t\t\t\t\t\t\t$.growl.error({\n\t\t\t\t\t\t\t\tmessage: \"Select level(s) to delete!\"\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet lvl_cpy = scope.options.levels.slice();\n\t\t\t\t\t\t$.each(levels, (index, ele) =>{\n\t\t\t\t\t\t\tlvl_cpy.splice($(ele).data(\"index\")-index,1); //Weird, huh? :D\n\t\t\t\t\t\t});\n\t\t\t\t\t\tscope.options.levels = lvl_cpy;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t    /*binder for ddslick-select-menu*/\n\t\t    rv.binders.ddslick = {\n\t\t        priority: 99,\n\t\t        publishes: true,\n\t\t        bind: function(el) {\n\t\t            var publish = this.publish;\n\t\t            $(el).ddslick({\n\t\t                imagePosition: \"left\",\n\t\t                width: 151,\n\t\t                background: \"white\",\n\t\t                onSelected: function(data) {\n\t\t                    publish(data.selectedData.value);\n\t\t                }\n\t\t            });\n\t\t        },\n\t\t        unbind: function(el) {\n\t\t            $(el).ddslick('destroy');\n\t\t        }\n\t\t    };\n\n\t\t    rv.binders.level = {\n\t\t    \tpriority: 99,\n\t\t    \tpublishes: true,\n\t\t    \troutine: (el, levels) => {\n\t\t    \t\tif(!levels)\n\t\t    \t\t\treturn;\n\n\t\t    \t\tel = $(el);\n\n\t\t    \t\t//Remove existing values on change\n\t\t    \t\tel.find(\"tr\").each((index, row) => {\n\t\t    \t\t\t//Avoid removing heading.\n\t\t    \t\t\tif(index==0)\n\t\t    \t\t\t\treturn;\n\t\t    \t\t\t$(row).remove();\n\t\t    \t\t});\n\n\t\t    \t\tif(levels.length==0){\n\t\t    \t\t\tel.append($('<tr><td colspan=\"4\"><div class=\"no-data\">No data available in table</div></td></tr>'));\n\t\t    \t\t\treturn;\n\t\t    \t\t}\n\t\t    \t\t$.each(levels, (index, value) => {\n\t\t    \t\t\tconst row = $('\\\n\t\t    \t\t\t\t<tr>\\\n\t\t\t    \t\t\t\t<td>' + value.level + '</td>\\\n\t\t\t    \t\t\t\t<td><div style=\"background-color: ' + value.stroke + ';width:100%;height:20px;\"></div></td>\\\n\t\t\t    \t\t\t\t<td>' + value.strokeWidth + '</td>\\\n\t\t\t    \t\t\t\t<td><div style=\"width:50px;overflow:hidden;margin: 0 auto;height: 20px;\"><img src=\"images/dashstyle/' + value.dashStyle + '.svg\" /></div</td>\\\n\t\t\t    \t\t\t</tr>\\\n\t\t    \t\t\t');\n\t\t    \t\t\trow.click( function() {\n\t\t    \t\t\t\t$(this).toggleClass(\"levels_selected\");\n\t\t    \t\t\t}).data(\"index\",index);\n\t\t    \t\t\tel.append(row);\n\t\t    \t\t});\n\t\t    \t}\n\t\t    };\n\n\t\t    rv.binders.check = (el, value) => {\n\t\t    \tthis.state.checks.push(()=>{\n\t\t    \t\tif(!_.inRange(this.state.options[value.option_name], value.min, value.max+1)){\n\t\t    \t\t\t$.growl.error({\n\t\t\t    \t\t\tmessage: \"Please enter a value between \" + value.min + \" and \" + value.max + \" for <b>\" + value.name + \"</b>!\"\n\t\t\t    \t\t});\n\t\t\t    \t\treturn false;\n\t\t    \t\t}\n\n\t\t\t    \treturn true;\n\t\t    \t});\n\t\t    }\n\n\t\t    // Convert value to int\n\t\t    rv.formatters.parseInt = {\n\t\t        publish: function(value) {\n\t\t            return parseInt(value);\n\t\t        }\n\t\t    };\n\n\t\t    rv.formatters.copy_option = {\n\t\t    \tread: (value, field) => {\n\t\t    \t\t//Using lexical scoping of arrow function to get class object.\n\t\t    \t\tvalue = value ? value : field.default;\n\t\t    \t\tthis.state.options[field.option_name]=value;\n\t\t    \t\treturn value;\n\t\t    \t}\n\t\t    }\n\n\t\t\t\treturn state;\n\t\t\t}\n\n\t\t\tunbind() {\n\t      this.view && this.view.unbind();\n\t      this.view = null;\n\t    }\n\n\t\t}\n\n\t\treturn {\n\t\t\topen: (containerIDWithHash, ind_shrt, before_add_cb) => new IndicatorWindow(containerIDWithHash, ind_shrt, before_add_cb)\n\t\t}\n});\n"]}